--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.3) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v84=0;local v85;while true do if (v84==0) then v85=v2(v0(v30,16));if v19 then local v97=v5(v85,v19);v19=nil;return v97;else return v85;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v86=(v31/((5 -3)^(v32-(2 -1))))%((3 -(1638 -(1523 + 114)))^(((v33-(2 -1)) -(v32-(620 -(555 + 64)))) + (932 -(857 + 67 + 7)))) ;return v86-(v86%(1 -0)) ;else local v87=1065 -(68 + 997) ;local v88;while true do if (v87==(568 -(367 + (1471 -(226 + 1044))))) then v88=(929 -(214 + 713))^(v32-(1 + 0)) ;return (((v31%(v88 + v88))>=v88) and (1 + (0 -0))) or (877 -(282 + (712 -(32 + 85)))) ;end end end end local function v21() local v34=0 -0 ;local v35;while true do if (v34==(1 -(0 + 0))) then return v35;end if (v34==(0 + 0)) then v35=v1(v16,v18,v18);v18=v18 + (2 -1) + 0 ;v34=958 -(892 + 65) ;end end end local function v22() local v36=0 + 0 ;local v37;local v38;while true do if (v36==(3 -2)) then return (v38 * (1208 -((1799 -(915 + 82)) + 150))) + v37 ;end if (v36==(0 -0)) then v37,v38=v1(v16,v18,v18 + (3 -1) );v18=v18 + 2 + 0 ;v36=1;end end end local function v23() local v39,v40,v41,v42=v1(v16,v18,v18 + 3 );v18=v18 + (4 -0) ;return (v42 * (16778403 -(1069 + 118))) + (v41 * ((405929 -220359) -(20868 + 99166))) + (v40 * (150 + 106)) + v39 ;end local function v24() local v43=0 -0 ;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==(1 + (0 -0))) then v46=792 -(368 + 423) ;v47=(v20(v45,(2 + 1) -2 ,38 -(10 + 8) ) * ((7 -5)^(474 -(416 + 26)))) + v44 ;v43=6 -4 ;end if (v43==(1 + 1)) then v48=v20(v45,36 -15 ,469 -(145 + 293) );v49=((v20(v45,462 -(44 + 386) )==1) and  -(1487 -(998 + 488))) or ((3 -2) + 0) ;v43=3;end if (v43==((1747 -(760 + 987)) + 0)) then v44=v23();v45=v23();v43=773 -((2114 -(1789 + 124)) + 571) ;end if (v43==(1141 -((882 -(745 + 21)) + 1022))) then if (v48==(0 -0)) then if (v47==(0 + 0 + 0)) then return v49 * (0 -0) ;else local v98=0 -0 ;while true do if (v98==(859 -(814 + 45))) then v48=2 -1 ;v46=0 + 0 ;break;end end end elseif (v48==(724 + 1323)) then return ((v47==0) and (v49 * ((886 -(261 + 624))/(0 -(0 -0))))) or (v49 * NaN) ;end return v8(v49,v48-(2103 -((4000 -2980) + 60)) ) * (v46 + (v47/(((12 + 1413) -(630 + 793))^((138 + 37) -123)))) ;end end end local function v25(v50) local v51;if  not v50 then v50=v23();if (v50==(1055 -(87 + 968))) then return "";end end v51=v3(v16,v18,(v18 + v50) -(4 -3) );v18=v18 + v50 ;local v52={};for v66=1 + 0 , #v51 do v52[v66]=v2(v1(v3(v51,v66,v66)));end return v6(v52);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=0;local v54;local v55;local v56;local v57;local v58;local v59;while true do local v68=0 + 0 ;local v69;while true do if (v68==(1086 -(461 + 625))) then v69=935 -(39 + 896) ;while true do if (v69~=(0 -0)) then else local v99=1171 -(418 + 753) ;while true do if (v99==(0 -0)) then if (v53==1) then local v101=0 + 0 ;while true do if (v101==(5 -3)) then v53=2 + 0 ;break;end if ((0 + 0)==v101) then v58=v23();v59={};v101=1;end if (v101==1) then for v105=1 + 0 ,v58 do local v106=529 -(406 + 123) ;local v107;local v108;while true do if (v106==(396 -(115 + 281))) then v107=v21();v108=nil;v106=2 -1 ;end if (v106~=(1 + 0)) then else if (v107==(1 + 0)) then v108=v21()~=0 ;elseif (v107==2) then v108=v24();elseif (v107==(2 + 1)) then v108=v25();end v59[v105]=v108;break;end end end v57[3]=v21();v101=2;end end end if (v53~=(4 -2)) then else local v102=1145 -(466 + 679) ;local v103;while true do if ((0 -0)~=v102) then else v103=0;while true do if (v103==0) then for v132=1,v23() do local v133=0 -0 ;local v134;while true do if ((867 -(550 + 317))==v133) then v134=v21();if (v20(v134,1 -0 ,1)==(0 -0)) then local v421=0 -0 ;local v422;local v423;local v424;local v425;while true do if (v421==(0 -0)) then local v443=285 -(134 + 151) ;while true do if (v443~=(1666 -(970 + 695))) then else v421=1 + 0 ;break;end if ((0 -0)==v443) then v422=0;v423=nil;v443=2 -1 ;end end end if (v421~=(115 -(4 + 110))) then else v424=nil;v425=nil;v421=3 -1 ;end if ((1992 -(582 + 1408))==v421) then while true do if (v422~=2) then else local v444=0 -0 ;while true do if ((0 -0)==v444) then if (v20(v424,3 -2 ,104 -(17 + 86) )~=(1 + 0)) then else v425[1826 -(1195 + 629) ]=v59[v425[2]];end if (v20(v424,2,2)~=(1 -0)) then else v425[3]=v59[v425[3 -0 ]];end v444=167 -(122 + 44) ;end if (v444==(242 -(187 + 54))) then v422=783 -(162 + 618) ;break;end end end if (v422~=(1 + 0)) then else local v445=0 + 0 ;while true do if (v445==(0 -0)) then v425={v22(),v22(),nil,nil};if (v423==(0 + 0)) then local v454=1636 -(1373 + 263) ;local v455;local v456;while true do if (v454==1) then while true do if (v455==(1000 -(451 + 549))) then v456=0;while true do if (0==v456) then v425[1 + 2 ]=v22();v425[69 -(30 + 35) ]=v22();break;end end break;end end break;end if (v454~=(0 -0)) then else v455=0 -0 ;v456=nil;v454=3 -2 ;end end elseif (v423==1) then v425[1387 -(746 + 638) ]=v23();elseif (v423==2) then v425[1215 -(323 + 889) ]=v23() -(2^(7 + 9)) ;elseif (v423~=(4 -1)) then else local v459=341 -(218 + 123) ;local v460;while true do if (v459==(580 -(361 + 219))) then v460=320 -(53 + 267) ;while true do if (v460==(1581 -(1535 + 46))) then v425[3 + 0 ]=v23() -((1 + 1)^(576 -(306 + 254))) ;v425[1 + 3 ]=v22();break;end end break;end end end v445=983 -(18 + 964) ;end if (v445==(1 -0)) then v422=1469 -(899 + 568) ;break;end end end if (v422~=(2 + 1)) then else if (v20(v424,7 -4 ,2 + 1 )==(604 -(268 + 335))) then v425[4]=v59[v425[854 -(20 + 830) ]];end v54[v132]=v425;break;end if (v422~=0) then else local v447=0 + 0 ;while true do if (v447==0) then v423=v20(v134,2,129 -(116 + 10) );v424=v20(v134,1 + 3 ,296 -(60 + 230) );v447=573 -(426 + 146) ;end if (v447~=(1 + 0)) then else v422=1457 -(282 + 1174) ;break;end end end end break;end end end break;end end end for v135=1,v23() do v55[v135-1 ]=v28();end v103=812 -(569 + 242) ;end if ((2 -1)==v103) then return v57;end end break;end end end v99=1;end if (v99==(1 + 0)) then v69=1;break;end end end if (v69==1) then if (v53~=(0 + 0)) then else local v100=1024 -(706 + 318) ;while true do if ((1551 -(1126 + 425))~=v100) then else v54={};v55={};v100=1252 -(721 + 530) ;end if (v100==(1273 -(945 + 326))) then v53=2 -1 ;break;end if (v100~=(3 -2)) then else v56={};v57={v54,v55,nil,v56};v100=2;end end end break;end end break;end end end end local function v29(v60,v61,v62) local v63=v60[1];local v64=v60[2];local v65=v60[3];return function(...) local v70=v63;local v71=v64;local v72=v65;local v73=v27;local v74=1;local v75= -1;local v76={};local v77={...};local v78=v12("#",...) -1 ;local v79={};local v80={};for v89=0,v78 do if (v89>=v72) then v76[v89-v72 ]=v77[v89 + 1 ];else v80[v89]=v77[v89 + 1 ];end end local v81=(v78-v72) + 1 ;local v82;local v83;while true do local v90=0;while true do if (v90==0) then v82=v70[v74];v83=v82[1];v90=1;end if (v90==1) then if (v83<=58) then if (v83<=28) then if (v83<=13) then if (v83<=6) then if (v83<=2) then if (v83<=0) then local v109=0;local v110;local v111;while true do if (1==v109) then v80[v110 + 1 ]=v111;v80[v110]=v111[v82[4]];break;end if (v109==0) then v110=v82[2];v111=v80[v82[3]];v109=1;end end elseif (v83==1) then v80[v82[2]]=v82[3];else v80[v82[2]]=v61[v82[3]];end elseif (v83<=4) then if (v83==3) then if v80[v82[2]] then v74=v74 + 1 ;else v74=v82[3];end else local v141=v82[2];v80[v141](v80[v141 + 1 ]);end elseif (v83>5) then v62[v82[3]]=v80[v82[2]];elseif (v80[v82[2]]~=v82[4]) then v74=v74 + 1 ;else v74=v82[3];end elseif (v83<=9) then if (v83<=7) then v80[v82[2]]=v80[v82[3]] -v80[v82[4]] ;elseif (v83==8) then do return v80[v82[2]];end elseif (v82[2]==v80[v82[4]]) then v74=v74 + 1 ;else v74=v82[3];end elseif (v83<=11) then if (v83>10) then if (v80[v82[2]]<v80[v82[4]]) then v74=v82[3];else v74=v74 + 1 ;end else local v144=0;local v145;while true do if (v144==0) then v145=v82[2];v80[v145]=v80[v145](v13(v80,v145 + 1 ,v82[3]));break;end end end elseif (v83==12) then v80[v82[2]][v82[3]]=v80[v82[4]];else v61[v82[3]]=v80[v82[2]];end elseif (v83<=20) then if (v83<=16) then if (v83<=14) then local v113=0;local v114;while true do if (v113==0) then v114=v82[2];v80[v114]=v80[v114](v13(v80,v114 + 1 ,v82[3]));break;end end elseif (v83>15) then v80[v82[2]]=v82[3]^v80[v82[4]] ;else v80[v82[2]]={};end elseif (v83<=18) then if (v83>17) then local v152=v82[2];v80[v152](v13(v80,v152 + 1 ,v75));else local v153=v82[2];do return v80[v153](v13(v80,v153 + 1 ,v82[3]));end end elseif (v83>19) then local v154=0;local v155;local v156;while true do if (v154==0) then v155=v82[2];v156={};v154=1;end if (v154==1) then for v398=1, #v79 do local v399=v79[v398];for v426=0, #v399 do local v427=v399[v426];local v428=v427[1];local v429=v427[2];if ((v428==v80) and (v429>=v155)) then v156[v429]=v428[v429];v427[1]=v156;end end end break;end end else do return v80[v82[2]];end end elseif (v83<=24) then if (v83<=22) then if (v83==21) then if (v80[v82[2]]==v80[v82[4]]) then v74=v74 + 1 ;else v74=v82[3];end elseif (v80[v82[2]]<v80[v82[4]]) then v74=v74 + 1 ;else v74=v82[3];end elseif (v83>23) then local v157=0;local v158;local v159;local v160;while true do if (v157==1) then v160=0;for v400=v158,v82[4] do local v401=0;while true do if (v401==0) then v160=v160 + 1 ;v80[v400]=v159[v160];break;end end end break;end if (v157==0) then v158=v82[2];v159={v80[v158](v13(v80,v158 + 1 ,v75))};v157=1;end end else v80[v82[2]]=v80[v82[3]] * v80[v82[4]] ;end elseif (v83<=26) then if (v83==25) then v80[v82[2]]=v80[v82[3]]/v82[4] ;else local v163=0;local v164;while true do if (v163==0) then v164=v82[2];do return v13(v80,v164,v75);end break;end end end elseif (v83>27) then v80[v82[2]][v80[v82[3]]]=v80[v82[4]];else do return v80[v82[2]]();end end elseif (v83<=43) then if (v83<=35) then if (v83<=31) then if (v83<=29) then v80[v82[2]]=v80[v82[3]] * v80[v82[4]] ;elseif (v83>30) then local v167=0;while true do if (v167==0) then v80[v82[2]]=v82[3]~=0 ;v74=v74 + 1 ;break;end end elseif  not v80[v82[2]] then v74=v74 + 1 ;else v74=v82[3];end elseif (v83<=33) then if (v83==32) then local v168=v82[3];local v169=v80[v168];for v301=v168 + 1 ,v82[4] do v169=v169   .. v80[v301] ;end v80[v82[2]]=v169;elseif (v82[2]<=v80[v82[4]]) then v74=v74 + 1 ;else v74=v82[3];end elseif (v83>34) then local v171=0;local v172;local v173;local v174;local v175;while true do if (v171==2) then for v402=v172,v75 do local v403=0;while true do if (v403==0) then v175=v175 + 1 ;v80[v402]=v173[v175];break;end end end break;end if (v171==0) then v172=v82[2];v173,v174=v73(v80[v172](v80[v172 + 1 ]));v171=1;end if (v171==1) then v75=(v174 + v172) -1 ;v175=0;v171=2;end end elseif (v80[v82[2]]<v80[v82[4]]) then v74=v82[3];else v74=v74 + 1 ;end elseif (v83<=39) then if (v83<=37) then if (v83==36) then local v176=v82[2];v80[v176](v13(v80,v176 + 1 ,v82[3]));else v80[v82[2]]=v82[3]~=0 ;end elseif (v83==38) then local v178=0;local v179;local v180;while true do if (v178==0) then v179=v82[3];v180=v80[v179];v178=1;end if (v178==1) then for v404=v179 + 1 ,v82[4] do v180=v180   .. v80[v404] ;end v80[v82[2]]=v180;break;end end else v62[v82[3]]=v80[v82[2]];end elseif (v83<=41) then if (v83>40) then v80[v82[2]]=v80[v82[3]] * v82[4] ;else local v184=0;local v185;local v186;local v187;while true do if (v184==1) then v187=v82[3];for v405=1,v187 do v186[v405]=v80[v185 + v405 ];end break;end if (v184==0) then v185=v82[2];v186=v80[v185];v184=1;end end end elseif (v83>42) then v80[v82[2]][v82[3]]=v82[4];else do return;end end elseif (v83<=50) then if (v83<=46) then if (v83<=44) then v80[v82[2]]=v80[v82[3]] -v80[v82[4]] ;elseif (v83>45) then do return v80[v82[2]]();end else v74=v82[3];end elseif (v83<=48) then if (v83==47) then local v191=0;local v192;local v193;local v194;local v195;while true do if (v191==2) then for v408=v192,v75 do local v409=0;while true do if (v409==0) then v195=v195 + 1 ;v80[v408]=v193[v195];break;end end end break;end if (v191==1) then v75=(v194 + v192) -1 ;v195=0;v191=2;end if (v191==0) then v192=v82[2];v193,v194=v73(v80[v192](v80[v192 + 1 ]));v191=1;end end else local v196=0;local v197;while true do if (v196==0) then v197=v82[2];v80[v197]=v80[v197]();break;end end end elseif (v83>49) then local v198=v82[2];v80[v198](v13(v80,v198 + 1 ,v75));elseif (v82[2]==v80[v82[4]]) then v74=v74 + 1 ;else v74=v82[3];end elseif (v83<=54) then if (v83<=52) then if (v83==51) then local v199=v80[v82[4]];if  not v199 then v74=v74 + 1 ;else v80[v82[2]]=v199;v74=v82[3];end elseif (v80[v82[2]]==v80[v82[4]]) then v74=v74 + 1 ;else v74=v82[3];end elseif (v83>53) then v80[v82[2]]();elseif (v80[v82[2]]==v82[4]) then v74=v74 + 1 ;else v74=v82[3];end elseif (v83<=56) then if (v83==55) then v80[v82[2]]=v29(v71[v82[3]],nil,v62);else local v201=v82[2];local v202={v80[v201](v13(v80,v201 + 1 ,v75))};local v203=0;for v302=v201,v82[4] do v203=v203 + 1 ;v80[v302]=v202[v203];end end elseif (v83==57) then local v204=0;local v205;while true do if (v204==0) then v205=v82[2];do return v13(v80,v205,v205 + v82[3] );end break;end end else local v206=0;local v207;local v208;local v209;while true do if (v206==1) then v209=0;for v410=v207,v82[4] do v209=v209 + 1 ;v80[v410]=v208[v209];end break;end if (v206==0) then v207=v82[2];v208={v80[v207](v80[v207 + 1 ])};v206=1;end end end elseif (v83<=87) then if (v83<=72) then if (v83<=65) then if (v83<=61) then if (v83<=59) then local v117=v80[v82[4]];if  not v117 then v74=v74 + 1 ;else v80[v82[2]]=v117;v74=v82[3];end elseif (v83==60) then for v305=v82[2],v82[3] do v80[v305]=nil;end else v61[v82[3]]=v80[v82[2]];end elseif (v83<=63) then if (v83>62) then v80[v82[2]]=v80[v82[3]] * v82[4] ;else local v215=0;local v216;while true do if (v215==0) then v216=v82[2];v80[v216]=v80[v216]();break;end end end elseif (v83==64) then v80[v82[2]]=v80[v82[3]]/v82[4] ;else v80[v82[2]]={};end elseif (v83<=68) then if (v83<=66) then local v118=0;local v119;while true do if (v118==0) then v119=v82[2];v80[v119](v80[v119 + 1 ]);break;end end elseif (v83>67) then for v308=v82[2],v82[3] do v80[v308]=nil;end elseif (v80[v82[2]]<v80[v82[4]]) then v74=v74 + 1 ;else v74=v82[3];end elseif (v83<=70) then if (v83>69) then v80[v82[2]]=v80[v82[3]][v82[4]];elseif v80[v82[2]] then v74=v74 + 1 ;else v74=v82[3];end elseif (v83==71) then v80[v82[2]]=v82[3]~=0 ;v74=v74 + 1 ;elseif  not v80[v82[2]] then v74=v74 + 1 ;else v74=v82[3];end elseif (v83<=79) then if (v83<=75) then if (v83<=73) then local v120=v82[2];local v121=v82[4];local v122=v120 + 2 ;local v123={v80[v120](v80[v120 + 1 ],v80[v122])};for v128=1,v121 do v80[v122 + v128 ]=v123[v128];end local v124=v123[1];if v124 then v80[v122]=v124;v74=v82[3];else v74=v74 + 1 ;end elseif (v83==74) then v80[v82[2]]=v29(v71[v82[3]],nil,v62);else local v225=v71[v82[3]];local v226;local v227={};v226=v10({},{__index=function(v310,v311) local v312=v227[v311];return v312[1][v312[2]];end,__newindex=function(v313,v314,v315) local v316=v227[v314];v316[1][v316[2]]=v315;end});for v318=1,v82[4] do local v319=0;local v320;while true do if (v319==0) then v74=v74 + 1 ;v320=v70[v74];v319=1;end if (v319==1) then if (v320[1]==83) then v227[v318-1 ]={v80,v320[3]};else v227[v318-1 ]={v61,v320[3]};end v79[ #v79 + 1 ]=v227;break;end end end v80[v82[2]]=v29(v225,v226,v62);end elseif (v83<=77) then if (v83>76) then local v229=v82[2];local v230=v80[v229];for v321=v229 + 1 ,v82[3] do v7(v230,v80[v321]);end else v80[v82[2]]=v62[v82[3]];end elseif (v83>78) then v80[v82[2]]=v82[3]^v80[v82[4]] ;else local v234=v82[2];local v235={};for v322=1, #v79 do local v323=v79[v322];for v358=0, #v323 do local v359=v323[v358];local v360=v359[1];local v361=v359[2];if ((v360==v80) and (v361>=v234)) then v235[v361]=v360[v361];v359[1]=v235;end end end end elseif (v83<=83) then if (v83<=81) then if (v83==80) then v80[v82[2]]=v80[v82[3]] + v82[4] ;else do return;end end elseif (v83>82) then v80[v82[2]]=v80[v82[3]];else local v239=v82[2];local v240=v80[v239];local v241=v82[3];for v324=1,v241 do v240[v324]=v80[v239 + v324 ];end end elseif (v83<=85) then if (v83>84) then local v242=v82[2];do return v80[v242](v13(v80,v242 + 1 ,v82[3]));end elseif (v80[v82[2]]<=v80[v82[4]]) then v74=v74 + 1 ;else v74=v82[3];end elseif (v83==86) then v80[v82[2]]();elseif (v82[2]<=v80[v82[4]]) then v74=v74 + 1 ;else v74=v82[3];end elseif (v83<=102) then if (v83<=94) then if (v83<=90) then if (v83<=88) then v80[v82[2]]=v80[v82[3]] + v82[4] ;elseif (v83>89) then local v243=v82[2];v80[v243]=v80[v243](v13(v80,v243 + 1 ,v75));else v74=v82[3];end elseif (v83<=92) then if (v83==91) then v80[v82[2]]=v80[v82[3]][v80[v82[4]]];else v80[v82[2]]=v61[v82[3]];end elseif (v83==93) then local v250=0;local v251;while true do if (v250==0) then v251=v82[2];v80[v251]=v80[v251](v80[v251 + 1 ]);break;end end elseif (v82[2]<v80[v82[4]]) then v74=v74 + 1 ;else v74=v82[3];end elseif (v83<=98) then if (v83<=96) then if (v83==95) then local v252=0;local v253;while true do if (v252==0) then v253=v82[2];do return v13(v80,v253,v75);end break;end end else v80[v82[2]][v82[3]]=v82[4];end elseif (v83==97) then v80[v82[2]]=v82[3]~=0 ;elseif (v80[v82[2]]<=v80[v82[4]]) then v74=v74 + 1 ;else v74=v82[3];end elseif (v83<=100) then if (v83>99) then v80[v82[2]][v82[3]]=v80[v82[4]];elseif (v80[v82[2]]==v82[4]) then v74=v74 + 1 ;else v74=v82[3];end elseif (v83>101) then v80[v82[2]]=v80[v82[3]];else v80[v82[2]]=v80[v82[3]] + v80[v82[4]] ;end elseif (v83<=109) then if (v83<=105) then if (v83<=103) then v80[v82[2]]=v80[v82[3]][v82[4]];elseif (v83==104) then v80[v82[2]]=v62[v82[3]];elseif (v82[2]<v80[v82[4]]) then v74=v74 + 1 ;else v74=v82[3];end elseif (v83<=107) then if (v83==106) then local v264=0;local v265;local v266;local v267;while true do if (v264==0) then v265=v82[2];v266={v80[v265](v80[v265 + 1 ])};v264=1;end if (v264==1) then v267=0;for v418=v265,v82[4] do v267=v267 + 1 ;v80[v418]=v266[v267];end break;end end else local v268=v82[2];local v269=v82[4];local v270=v268 + 2 ;local v271={v80[v268](v80[v268 + 1 ],v80[v270])};for v327=1,v269 do v80[v270 + v327 ]=v271[v327];end local v272=v271[1];if v272 then local v368=0;while true do if (v368==0) then v80[v270]=v272;v74=v82[3];break;end end else v74=v74 + 1 ;end end elseif (v83==108) then local v273=v82[2];v80[v273](v13(v80,v273 + 1 ,v82[3]));else v80[v82[2]][v80[v82[3]]]=v80[v82[4]];end elseif (v83<=113) then if (v83<=111) then if (v83==110) then local v276=v82[2];v80[v276]=v80[v276](v80[v276 + 1 ]);else v80[v82[2]]=v80[v82[3]][v80[v82[4]]];end elseif (v83>112) then local v280=v82[2];local v281=v80[v82[3]];v80[v280 + 1 ]=v281;v80[v280]=v281[v82[4]];else local v285=0;local v286;while true do if (v285==0) then v286=v82[2];v80[v286]=v80[v286](v13(v80,v286 + 1 ,v75));break;end end end elseif (v83<=115) then if (v83>114) then v80[v82[2]]=v82[3];elseif (v80[v82[2]]~=v82[4]) then v74=v74 + 1 ;else v74=v82[3];end elseif (v83==116) then v80[v82[2]]=v80[v82[3]] + v80[v82[4]] ;else local v290=v71[v82[3]];local v291;local v292={};v291=v10({},{__index=function(v330,v331) local v332=v292[v331];return v332[1][v332[2]];end,__newindex=function(v333,v334,v335) local v336=v292[v334];v336[1][v336[2]]=v335;end});for v338=1,v82[4] do v74=v74 + 1 ;local v339=v70[v74];if (v339[1]==83) then v292[v338-1 ]={v80,v339[3]};else v292[v338-1 ]={v61,v339[3]};end v79[ #v79 + 1 ]=v292;end v80[v82[2]]=v29(v290,v291,v62);end v74=v74 + 1 ;break;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
